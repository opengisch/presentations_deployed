name: Staging

on:
  push:
    branches:
      - staging

jobs:
  prep_staging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Prepping staging

      - name: Check if web/ and index.html have been pushed
        run: |
          if [[ -d "web" ]] && [[ -f "index.html" ]]
          then
            exit 0
          else
            echo "::error ::Missing 'web' or 'index.html' from 'staging' branch."
            exit 1
          fi

  update_deployment:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [prep_staging]
    steps:
      - uses: actions/checkout@v3

      # Push web to production

      - name: Push web to production
        env:
          SRC_FOLDER_PATH: web
          TARGET_BRANCH: production
        run: |
          files=$(find $SRC_FOLDER_PATH -type f)
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git fetch
          git checkout $TARGET_BRANCH
          git checkout ${GITHUB_REF##*/} -- $files
          git add -A
          git diff-index --quiet HEAD ||  git commit -am "deploy files"
          git push origin $TARGET_BRANCH

      # Checkout to production & peek list of subdirectories

      - uses: actions/checkout@v3
        with:
          ref: production

      - name: Fetch subdirs from production
        id: subdirs
        run: |
          if [[ -d "web" ]]
          then
            subdirs=$(ls web)
            echo "include=$subdirs" >> $GITHUB_OUTPUT
            echo "=> Found: $subdirs"
          else
            echo "::error ::Missing 'web' from 'production' branch."
            exit 1
          fi

      - name: Check out pusher repository
        uses: actions/checkout@v3
        with:
          repository: opengisch/presentations

      - name: Fech opt-outs from pusher
        id: optouts
        run: |
          echo "opted_out=$(cat .to_not_deploy.txt)" >> $GITHUB_OUTPUT

      # Update index.html, passing to_remove to next step for deletion

      - uses: actions/checkout@v3
        with:
          ref: staging

      - name: Update index.html, parse opt-outs
        id: update_index
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: |
          including="${{ steps.subdirs.outputs.include }}"
          excluding="${{ steps.optouts.outputs.opted_out }}"
          echo "=> Including: $including"
          echo "=> Excluding: $excluding"
          pip install -r ./scripts/requirements.txt
          python ./scripts/update_root_index.py "$including" "$excluding"

      # Push index.html to production and remove opted-out

      - name: Push index.html to production
        env:
          TARGET_BRANCH: production
        run: |
          files="index.html"
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add -A
          git commit -m "Updating index.html"
          git fetch
          git checkout $TARGET_BRANCH
          git checkout ${GITHUB_REF##*/} -- $files
          git diff-index --quiet HEAD ||  git commit -am "deploy files"
          git push origin $TARGET_BRANCH
